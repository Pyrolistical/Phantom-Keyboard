Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm32u4.o (exit)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
                              ./phantom.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
                              ./phantom.o (__do_clear_bss)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o)
                              ./phantom.o (__fixunssfsi)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o) (__subsf3)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_mul_sf.o)
                              ./phantom.o (__mulsf3)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_div_sf.o)
                              ./phantom.o (__divsf3)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_gt_sf.o)
                              ./phantom.o (__gtsf2)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_ge_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o) (__gesf2)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_lt_sf.o)
                              ./phantom.o (__ltsf2)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_sf_to_si.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o) (__fixsfsi)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_thenan_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o) (__thenan_sf)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o) (__epilogue_restores__)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_pack_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o) (__pack_f)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_unpack_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o) (__unpack_f)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fpcmp_parts_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_gt_sf.o) (__fpcmp_parts_f)

Allocating common symbols
Common symbol       size              file

pressed             0x66              ./phantom.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm32u4.o
LOAD ./phantom.o
LOAD ./usb_keyboard.o
LOAD /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x1e8e
 *(.vectors)
 .vectors       0x0000000000000000       0xac /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm32u4.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000000000000ac       0xd4 ./usb_keyboard.o
                0x0000000000000180                . = ALIGN (0x2)
                0x0000000000000180                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000180        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000180                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000180                __ctors_start = .
 *(.ctors)
                0x0000000000000180                __ctors_end = .
                0x0000000000000180                __dtors_start = .
 *(.dtors)
                0x0000000000000180                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000180        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm32u4.o
                0x0000000000000180                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000180        0xc /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm32u4.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000018c       0x16 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
                0x000000000000018c                __do_copy_data
 .init4         0x00000000000001a2       0x10 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
                0x00000000000001a2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000001b2        0x8 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm32u4.o
 *(.init9)
 *(.text)
 .text          0x00000000000001ba        0x4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm32u4.o
                0x00000000000001ba                __vector_38
                0x00000000000001ba                __vector_22
                0x00000000000001ba                __vector_28
                0x00000000000001ba                __vector_1
                0x00000000000001ba                __vector_32
                0x00000000000001ba                __vector_34
                0x00000000000001ba                __vector_24
                0x00000000000001ba                __vector_12
                0x00000000000001ba                __bad_interrupt
                0x00000000000001ba                __vector_6
                0x00000000000001ba                __vector_31
                0x00000000000001ba                __vector_35
                0x00000000000001ba                __vector_39
                0x00000000000001ba                __vector_3
                0x00000000000001ba                __vector_23
                0x00000000000001ba                __vector_30
                0x00000000000001ba                __vector_25
                0x00000000000001ba                __vector_13
                0x00000000000001ba                __vector_17
                0x00000000000001ba                __vector_19
                0x00000000000001ba                __vector_7
                0x00000000000001ba                __vector_41
                0x00000000000001ba                __vector_27
                0x00000000000001ba                __vector_5
                0x00000000000001ba                __vector_33
                0x00000000000001ba                __vector_37
                0x00000000000001ba                __vector_4
                0x00000000000001ba                __vector_9
                0x00000000000001ba                __vector_2
                0x00000000000001ba                __vector_21
                0x00000000000001ba                __vector_15
                0x00000000000001ba                __vector_36
                0x00000000000001ba                __vector_29
                0x00000000000001ba                __vector_40
                0x00000000000001ba                __vector_8
                0x00000000000001ba                __vector_26
                0x00000000000001ba                __vector_14
                0x00000000000001ba                __vector_16
                0x00000000000001ba                __vector_18
                0x00000000000001ba                __vector_20
                0x00000000000001ba                __vector_42
 .text          0x00000000000001be      0x7c6 ./phantom.o
                0x00000000000001be                main
                0x00000000000005fc                send
                0x000000000000067a                key_press
                0x0000000000000706                key_release
                0x00000000000007ae                init
 .text          0x0000000000000984      0x88a ./usb_keyboard.o
                0x0000000000000984                usb_init
                0x00000000000009d8                usb_configured
                0x00000000000009ea                usb_keyboard_press
                0x0000000000000a36                usb_keyboard_send
                0x0000000000000b14                __vector_10
                0x0000000000000c48                __vector_11
 .text          0x000000000000120e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .text          0x000000000000120e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .text          0x000000000000120e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 .text          0x000000000000120e       0x58 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o)
                0x000000000000120e                __fixunssfsi
 .text          0x0000000000001266      0x354 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o)
                0x00000000000014fe                __subsf3
                0x0000000000001560                __addsf3
 .text          0x00000000000015ba      0x1f4 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_mul_sf.o)
                0x00000000000015ba                __mulsf3
 .text          0x00000000000017ae      0x158 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_div_sf.o)
                0x00000000000017ae                __divsf3
 .text          0x0000000000001906       0x60 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_gt_sf.o)
                0x0000000000001906                __gtsf2
 .text          0x0000000000001966       0x60 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_ge_sf.o)
                0x0000000000001966                __gesf2
 .text          0x00000000000019c6       0x60 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_lt_sf.o)
                0x00000000000019c6                __ltsf2
 .text          0x0000000000001a26       0xa8 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_sf_to_si.o)
                0x0000000000001a26                __fixsfsi
 .text          0x0000000000001ace        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_thenan_sf.o)
 .text          0x0000000000001ace        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
 .text          0x0000000000001ace        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
 .text          0x0000000000001ace      0x1ac /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_pack_sf.o)
                0x0000000000001ace                __pack_f
 .text          0x0000000000001c7a       0xf0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_unpack_sf.o)
                0x0000000000001c7a                __unpack_f
 .text          0x0000000000001d6a       0xb2 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fpcmp_parts_sf.o)
                0x0000000000001d6a                __fpcmp_parts_f
                0x0000000000001e1c                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000001e1c        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000001e1c        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000001e1c        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000001e1c       0x38 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
                0x0000000000001e1c                __prologue_saves__
 .text.libgcc   0x0000000000001e54       0x36 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
                0x0000000000001e54                __epilogue_restores__
                0x0000000000001e8a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000001e8a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
                0x0000000000001e8a                exit
                0x0000000000001e8a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000001e8a        0x4 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000001e8e                _etext = .

.data           0x0000000000800100      0x122 load address 0x0000000000001e8e
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm32u4.o
 .data          0x0000000000800100      0x118 ./phantom.o
                0x0000000000800100                is_modifier
                0x0000000000800166                layout
                0x00000000008001cc                row_port
                0x00000000008001d8                row_bit
                0x00000000008001de                col_port
                0x0000000000800200                col_bit
                0x0000000000800211                queue
 .data          0x0000000000800218        0x2 ./usb_keyboard.o
 .data          0x000000000080021a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .data          0x000000000080021a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .data          0x000000000080021a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 .data          0x000000000080021a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o)
 .data          0x000000000080021a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o)
 .data          0x000000000080021a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_mul_sf.o)
 .data          0x000000000080021a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_div_sf.o)
 .data          0x000000000080021a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_gt_sf.o)
 .data          0x000000000080021a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_ge_sf.o)
 .data          0x000000000080021a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_lt_sf.o)
 .data          0x000000000080021a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_sf_to_si.o)
 .data          0x000000000080021a        0x8 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_thenan_sf.o)
                0x000000000080021a                __thenan_sf
 .data          0x0000000000800222        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
 .data          0x0000000000800222        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
 .data          0x0000000000800222        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_pack_sf.o)
 .data          0x0000000000800222        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_unpack_sf.o)
 .data          0x0000000000800222        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fpcmp_parts_sf.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800222                . = ALIGN (0x2)
                0x0000000000800222                _edata = .
                0x0000000000800222                PROVIDE (__data_end, .)

.bss            0x0000000000800222       0x72
                0x0000000000800222                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800222        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm32u4.o
 .bss           0x0000000000800222        0x1 ./phantom.o
                0x0000000000800222                mod_keys
 .bss           0x0000000000800223        0xb ./usb_keyboard.o
                0x0000000000800223                keyboard_modifier_keys
                0x0000000000800224                keyboard_keys
                0x000000000080022a                keyboard_leds
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_mul_sf.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_div_sf.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_gt_sf.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_ge_sf.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_lt_sf.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_sf_to_si.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_thenan_sf.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_pack_sf.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_unpack_sf.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fpcmp_parts_sf.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080022e       0x66 ./phantom.o
                0x000000000080022e                pressed
                0x0000000000800294                PROVIDE (__bss_end, .)
                0x0000000000001e8e                __data_load_start = LOADADDR (.data)
                0x0000000000001fb0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800294        0x0
                0x0000000000800294                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800294                PROVIDE (__noinit_end, .)
                0x0000000000800294                _end = .
                0x0000000000800294                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x1fec
 *(.stab)
 .stab          0x0000000000000000      0x6b4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm32u4.o
 .stab          0x00000000000006b4      0xa38 ./phantom.o
                                        0xa44 (size before relaxing)
 .stab          0x00000000000010ec      0xf00 ./usb_keyboard.o
                                       0x1164 (size before relaxing)

.stabstr        0x0000000000000000      0xf83
 *(.stabstr)
 .stabstr       0x0000000000000000      0xf83 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm32u4.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Phantom-Keyboard.elf elf32-avr)
LOAD linker stubs
